---
- hosts: patroni
  gather_facts: no
  pre_tasks:
    - raw: test -e /usr/bin/python3 || (apt-get -qq update -y && apt-get -qq install python3-minimal -y > /dev/null)
    - package:
        name: ['apt-utils', 'sudo', 'ca-certificates', 'net-tools']
    - file:
        path: /etc/udev/rules.d
        state: directory

- hosts: patroni
  roles:
    - role: ../ansible-role-patroni
      patroni_log_destination: file
      patroni_dcs_exists: true
      patroni_etcd_hosts: "etcd0:2379,etcd1:2379,etcd2:2379"
      patroni_bootstrap_dcs_postgresql_pg_hba:
        - { type: "local", database: "all",         user: "all",                                                  method: "md5" }
        - { type: "host",  database: "all",         user: "all",                        address: "0.0.0.0/0",     method: "md5" }
        - { type: "host",  database: "replication", user: patroni_replication_username, address: "127.0.0.1/32",  method: "md5" }
        - { type: "host",  database: "replication", user: patroni_replication_username, address: "172.18.0.0/24", method: "md5" }
#      patroni_bootstrap_dcs_postgresql_pg_hba: "
#        {%- set pg_hba = [dict(type='local', database='all', user='all', method='md5'), dict(type='host', database='all', user='all', address='0.0.0.0/0', method='md5'), dict(type='host', database='replication', user=patroni_replication_username, address='172.18.0.0/16', method='md5')] %}
#        {%- for host in play_hosts %}
#        {{- pg_hba.append(dict(type='host', database='replication', user=patroni_replication_username, address=hostvars[host]['ansible_fqdn'] + '.tests_default', method='md5')) }}
#        {%- endfor %}
#        {{- pg_hba -}}"
