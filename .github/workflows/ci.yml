---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master


jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint .

  molecule-default:
    name: Molecule (default)
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        distro:
          - centos7

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker

      - name: Run Molecule tests.
        run: molecule test -s default
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

#  molecule-patroni:
#    name: Molecule (patroni)
#    runs-on: ubuntu-latest
#    needs: molecule-default
#    strategy:
#      matrix:
#        distro:
#          - centos7
#        scenario:
#          - patroni
#
#    steps:
#      - name: Check out the codebase.
#        uses: actions/checkout@v2
#
#      - name: Set up Python 3.
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#
#      - name: Install test dependencies.
#        run: pip3 install ansible molecule[docker] docker
#
#      - name: Run Molecule tests.
#        run: molecule test -s ${{ matrix.scenario }}
#        env:
#          PY_COLORS: '1'
#          ANSIBLE_FORCE_COLOR: '1'
#          MOLECULE_DISTRO: ${{ matrix.distro }}
